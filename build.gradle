apply plugin: 'java'

defaultTasks "clean", "compileJava" 


dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.8.1'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java/'
            srcDir 'src/generated/java/gen-javabean/'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

compileJava.doFirst {
  generatedSourcesDir = new File('src/generated/java')
  generatedSourcesDir.mkdirs()
  
  Process proc = ["/usr/local/bin/thrift", "--gen", "java:beans", "-o", "src/generated/java", "src/main/thrift/categoryService.thrift"].execute()
  proc.consumeProcessErrorStream(System.err)
  proc.consumeProcessOutputStream(System.out)
  if (proc.waitFor() != 0) {
    throw new RuntimeException('thrift sourcecode generation failed')
  }  
}

task runServer(dependsOn: sourceSets.main.runtimeClasspath) << { task ->
Process proc = ["java", "-cp", task.project.sourceSets.main.runtimeClasspath.asPath, "com.log4p.services.RunCategoryServer"].execute()
   proc.consumeProcessErrorStream(System.err)
   proc.consumeProcessOutputStream(System.out)
   if (proc.waitFor() != 0) {
       throw new RuntimeException('exec server failed')
   }
}

task runClient(dependsOn: sourceSets.main.runtimeClasspath) << { task ->
Process proc = ["java", "-cp", task.project.sourceSets.main.runtimeClasspath.asPath, "com.log4p.services.CategoryServiceClient"].execute()
   proc.consumeProcessErrorStream(System.err)
   proc.consumeProcessOutputStream(System.out)
   if (proc.waitFor() != 0) {
       throw new RuntimeException('exec client failed')
   }
}